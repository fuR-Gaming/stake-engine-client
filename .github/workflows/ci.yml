name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run TypeScript compiler
      run: npm run build
    
    - name: Run tests (if available)
      run: npm test --if-present
    
    - name: Check types
      run: npx tsc --noEmit
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '18.x'
      with:
        name: dist
        path: dist/
        retention-days: 7

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint (if configured)
      run: npx eslint . --ext .ts,.js --max-warnings 0 || echo "ESLint not configured, skipping"
      continue-on-error: true
    
    - name: Check code formatting with Prettier (if configured)
      run: npx prettier --check . || echo "Prettier not configured, skipping"
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level high
    
    - name: Check for known vulnerabilities
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
    - run: npx audit-ci --high

  build-check:
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build package
      run: npm run build
    
    - name: Verify package contents
      run: |
        npm pack --dry-run
        echo "Package contents verified successfully"
    
    - name: Test package installation
      run: |
        npm pack
        PACKAGE_FILE=$(ls stake-engine-client-*.tgz)
        npm install -g $PACKAGE_FILE
        echo "Package installation test passed"